/*
 * После затянувшегося совещания директор фирмы решил заказать такси, чтобы развезти сотрудников по домам. 
 * Он заказал N машин – ровно столько, сколь у него сотрудников. Однако, когда они подъехали, оказалось, что у каждого водителя такси свой тариф за 1 километр.
 * Директор знает, какому сотруднику сколько километров от работы до дома (к сожалению, все сотрудники живут в разных направлениях, 
 * поэтому нельзя отправить двух сотрудников на одной машине). Теперь директор хочет определить, какой из сотрудников на каком такси должен поехать домой, 
 * чтобы суммарные затраты на такси (а их несет фирма) были минимальны.
 * 
 * Входные данные. Первая строка входных данных содержит натуральное число N (1 ≤ N ≤ 1000) – количество сотрудников компании 
 * (совпадающее с количеством вызванных машин такси). Далее записано N чисел, задающих расстояния в километрах от работы до домов сотрудников компании 
 * (первое число – для первого сотрудника, второе – для второго и т.д.). Все расстояния – положительные целые числа, не превышающие 1000. 
 * Далее записано еще N чисел – тарифы за проезд одного километра в такси (первое число – в первой машине такси, второе – во второй и т.д.). 
 * Тарифы выражаются положительными целыми числами, не превышающими 10000. 
 * 
 * Выходные данные. Программа должна вывести N чисел. Первое число – номер такси, в которое должен сесть первый сотрудник, 
 * второе число – номер такси, в которое должен сесть второй и т.д., чтобы суммарные затраты на такси были минимальны. 
 * Если вариантов рассадки сотрудников, при которых затраты минимальны, несколько, выведите любой из них.
*/

using System;
using System.Collections.Generic;

namespace GreedyAlgotithm2
{
    class Program
    {
        static void Main(string[] args)
        {
            Console.WriteLine("Введите кол-во машин (сотрудников):");
            int N = int.Parse(Console.ReadLine());

            List<int> users = new List<int>();
            List<int> cars = new List<int>();

            for (int i = 0; i < N; i++)
            {
                Console.WriteLine($"Введите расстояние в километрах до дома {i + 1}-ого(его) сотрудника:");
                users.Add(int.Parse(Console.ReadLine()));
            }
            for (int i = 0; i < N; i++)
            {
                Console.WriteLine($"Введите тариф за проезд {i + 1}-ого(его) таксиста:");
                cars.Add(int.Parse(Console.ReadLine()));
            }

            int[] result = new int[N];
            int min, max;
            users.Add(int.MaxValue);
            cars.Add(int.MinValue);
            for (int i = 0; i < N; i++)
            {
                min = N;
                max = N;

                for (int j = 0; j < N; j++)
                {
                    if (users[j] > 0 && users[j] < users[min])
                        min = j;
                    if (cars[j] > 0 && cars[j] > cars[max])
                        max = j;
                }
                result[min] = max + 1;
                users[min] = cars[max] = -1;
            }
            foreach (int x in result)
            {
                Console.Write(x + " ");
            }
        }
    }
}
